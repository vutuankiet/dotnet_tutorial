@model WebSales.Models.EF.Product

@{
    ViewBag.Title = "Details";
}

@using (Html.BeginForm())
{
    @Html.HiddenFor(model => model.ID)
    <div class="card shadow container col-12 col-md-6">
        <div class="card-body">
            <h2>Edit</h2>
            <h4>Sua san pham</h4>
            <hr />
            <div class="form-group">
                <label class="control-label">Ten San Pham</label>
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <label class="control-label">Don Gia</label>
                @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <label class="control-label">Hinh Anh</label>
                @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <label class="control-label">Ngay San Xuat</label>
                <div class="form-group">
                    <input type="datetime" id="ProductDate" name="ProductDate" class="form-control" value="@Model.ProductDate.ToString()" readonly/>
                    @Html.ValidationMessageFor(model => model.ProductDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label">Tinh Trang</label>
                <div class="form-group">
                    <div class="checkbox">
                        @{
                            string classCss = (bool)Model.Available ? "btn-success" : "btn-danger";
                            string content = (bool)Model.Available ? "Con ban" : "Ngung ban";

                        }
                        <button class="btn btn-block btn-sm @classCss border-dark">@content</button>
                        @*@Html.DropDownList("Available", ViewBag.Available as SelectList, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.Available, "", new { @class = "text-danger" })*@
                    </div>
                </div>

            </div>

            <div class="form-group">
                <label class="control-label">Loai San Pham</label>
                @Html.EditorFor(model => model.Category.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } } )
                @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <label class="control-label">Mo ta</label>
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10 p-0">
                    @Html.ActionLink("Chinh sua", "Edit", null, htmlAttributes: new { @class = "btn btn-outline-warning" })
                    @Html.ActionLink("Back to List", "Index", null, htmlAttributes: new { @class = "btn btn-outline-dark" })
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}